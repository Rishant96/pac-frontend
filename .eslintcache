[{"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/index.tsx":"1","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/pages/index.ts":"2","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/pages/forgotLink.tsx":"3","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/pages/form.tsx":"4","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/pages/register.tsx":"5","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/pages/registered.tsx":"6","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/components/index.ts":"7","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/containers/index.ts":"8","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/constants/routes.ts":"9","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/components/QAForm/form.styles.ts":"10","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/components/QAForm/index.tsx":"11","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/containers/question_answer.tsx":"12","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/containers/infoForm.tsx":"13","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/App.tsx":"14"},{"size":339,"mtime":1611206776835,"results":"15","hashOfConfig":"16"},{"size":156,"mtime":1611840583943,"results":"17","hashOfConfig":"16"},{"size":2112,"mtime":1613251701804,"results":"18","hashOfConfig":"16"},{"size":3142,"mtime":1612970370630,"results":"19","hashOfConfig":"16"},{"size":3275,"mtime":1613251121698,"results":"20","hashOfConfig":"16"},{"size":559,"mtime":1611862502119,"results":"21","hashOfConfig":"16"},{"size":152,"mtime":1611354965165,"results":"22","hashOfConfig":"16"},{"size":135,"mtime":1611843504482,"results":"23","hashOfConfig":"16"},{"size":138,"mtime":1611347837212,"results":"24","hashOfConfig":"16"},{"size":1984,"mtime":1613179815368,"results":"25","hashOfConfig":"16"},{"size":2507,"mtime":1613177339393,"results":"26","hashOfConfig":"16"},{"size":4176,"mtime":1613253545225,"results":"27","hashOfConfig":"16"},{"size":3511,"mtime":1613179870526,"results":"28","hashOfConfig":"16"},{"size":698,"mtime":1611840596075,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3qha6d",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/index.tsx",[],"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/pages/index.ts",[],"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/pages/forgotLink.tsx",[],"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/pages/form.tsx",["59","60"],"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/pages/register.tsx",[],"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/pages/registered.tsx",[],"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/components/index.ts",[],"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/containers/index.ts",[],"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/constants/routes.ts",[],"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/components/QAForm/form.styles.ts",[],"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/components/QAForm/index.tsx",[],"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/containers/question_answer.tsx",["61","62","63","64"],"import { Console } from \"console\";\r\nimport { FormEvent, useEffect, useState } from \"react\";\r\nimport { useQuery } from \"urql\";\r\nimport { QAForm } from \"../components\";\r\n\r\nconst NextQuestion = `\r\n  query ($q_id: Int!) {\r\n    question(questionId: $q_id) {\r\n      id\r\n      formId\r\n      display\r\n      nextQuestionId\r\n      answers {\r\n        id\r\n        formId\r\n        questionId\r\n        value\r\n        level\r\n        type\r\n        display\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckBranch = `\r\nquery ($q_id: Int!) {\r\n  branch(questionId: $q_id) {\r\n    id\r\n    formId\r\n    questionId\r\n    nextQuestionId\r\n    answerId\r\n  }\r\n}\r\n`;\r\n\r\nexport const QuestionAnswer: React.FC<any> = ({\r\n  q_id,\r\n  handleNext,\r\n  handleSubmit,\r\n  a_id = -1,\r\n  a_val = null,\r\n}) => {\r\n  const [question, setQuestion] = useState(\"...\");\r\n  const [nextQId, setNextQId] = useState<any>(-1);\r\n  const [answers, setAnswers] = useState<any[]>([]);\r\n  const [ansSelected, setAnsSelected] = useState({\r\n    id: a_id === -1 ? 0 : a_id,\r\n    value: a_val === null ? -1 : a_val,\r\n  });\r\n  const [checkBranch, setCheckBranch] = useState(false);\r\n  const [branchInfo, setBranchInfo] = useState({ branchId: 0, ansId: 0 });\r\n  const [btnText, setBtnText] = useState(\"...\");\r\n  const [hasBranch, setHasBranch] = useState(false);\r\n\r\n  const [nextQuestion] = useQuery({\r\n    // reexecuteSecret (_)\r\n    query: NextQuestion,\r\n    variables: { q_id },\r\n  });\r\n\r\n  const [branch] = useQuery({\r\n    query: CheckBranch,\r\n    variables: { q_id },\r\n    // pause: checkBranch,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const { data, fetching, error } = nextQuestion;\r\n\r\n    if (!fetching) {\r\n      setQuestion(data.question.display);\r\n      setAnswers(data.question.answers);\r\n      setNextQId(data.question.nextQuestionId);\r\n      setCheckBranch(true);\r\n    }\r\n  }, [nextQuestion]);\r\n\r\n  useEffect(() => {\r\n    if (checkBranch) {\r\n      const { data, fetching, error } = branch;\r\n\r\n      if (!fetching && data.branch !== null) {\r\n        setBranchInfo({\r\n          branchId: data.branch.nextQuestionId,\r\n          ansId: data.branch.answerId,\r\n        });\r\n        setHasBranch(true);\r\n        setCheckBranch(false);\r\n      } else {\r\n        setHasBranch(false);\r\n      }\r\n    }\r\n\r\n    if (branchInfo.branchId !== 0 && ansSelected.id === branchInfo.ansId) {\r\n      setNextQId(branchInfo.branchId);\r\n      setBtnText(\"Next\");\r\n    } else {\r\n      if (hasBranch) {\r\n        setNextQId(-1);\r\n        setBtnText(\"Submit\");\r\n      } else {\r\n        if (nextQId === -1) {\r\n          setBtnText(\"Submit\");\r\n        } else {\r\n          setBtnText(\"Next\");\r\n        }\r\n      }\r\n    }\r\n  }, [branch, ansSelected, checkBranch, branchInfo]);\r\n\r\n  return (\r\n    <>\r\n      <QAForm.Title>{question}</QAForm.Title>\r\n      <QAForm.Answer>\r\n        {answers.length === 0 ? (\r\n          \"...\"\r\n        ) : answers.length === 1 ? (\r\n          <QAForm.AnswerField>\r\n            <span></span>\r\n            <QAForm.Input\r\n              value={ansSelected.value}\r\n              onChange={(e: FormEvent<HTMLInputElement>) => {\r\n                setAnsSelected({\r\n                  id: answers[0].id,\r\n                  value: e.currentTarget.value,\r\n                });\r\n              }}\r\n            />\r\n          </QAForm.AnswerField>\r\n        ) : (\r\n          answers.map((ans) => (\r\n            <QAForm.AnswerField key={ans.id}>\r\n              <QAForm.Radio\r\n                value={ans.value}\r\n                name={`answer_${ans.id}`}\r\n                checked={ansSelected.value === ans.value}\r\n                onChange={(e: FormEvent<HTMLInputElement>) => {\r\n                  setAnsSelected({ id: ans.id, value: ans.value });\r\n                }}\r\n              />\r\n              <QAForm.AnswerLabel>{ans.display}</QAForm.AnswerLabel>\r\n            </QAForm.AnswerField>\r\n          ))\r\n        )}\r\n      </QAForm.Answer>\r\n      <QAForm.ButtonPrimary\r\n        onClick={(e: FormEvent) => {\r\n          btnText === \"Submit\"\r\n            ? handleSubmit(e)\r\n            : handleNext(e, q_id, ansSelected.value, nextQId);\r\n          setAnsSelected({ id: 0, value: -1 });\r\n        }}\r\n      >\r\n        {btnText}\r\n      </QAForm.ButtonPrimary>\r\n    </>\r\n  );\r\n};\r\n","/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/containers/infoForm.tsx",[],"/media/rishant96/D622834222832719/Users/kiraR/Documents/Code/React/pca-app/web/src/App.tsx",[],{"ruleId":"65","severity":1,"message":"66","line":100,"column":29,"nodeType":"67","messageId":"68","endLine":100,"endColumn":34},{"ruleId":"65","severity":1,"message":"66","line":108,"column":29,"nodeType":"67","messageId":"68","endLine":108,"endColumn":34},{"ruleId":"65","severity":1,"message":"69","line":1,"column":10,"nodeType":"67","messageId":"68","endLine":1,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":70,"column":29,"nodeType":"67","messageId":"68","endLine":70,"endColumn":34},{"ruleId":"65","severity":1,"message":"66","line":82,"column":31,"nodeType":"67","messageId":"68","endLine":82,"endColumn":36},{"ruleId":"70","severity":1,"message":"71","line":111,"column":6,"nodeType":"72","endLine":111,"endColumn":52,"suggestions":"73"},"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Console' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hasBranch' and 'nextQId'. Either include them or remove the dependency array.","ArrayExpression",["74"],{"desc":"75","fix":"76"},"Update the dependencies array to be: [branch, ansSelected, checkBranch, branchInfo, hasBranch, nextQId]",{"range":"77","text":"78"},[2623,2669],"[branch, ansSelected, checkBranch, branchInfo, hasBranch, nextQId]"]